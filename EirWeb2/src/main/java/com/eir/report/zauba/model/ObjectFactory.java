//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.21 at 07:58:31 PM IST 
//


package com.eir.report.zauba.model;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.example.xsd package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _CompanyReport_QNAME = new QName("", "CompanyReport");
    private final static QName _CompaniesAssociatedWithTypeCompany_QNAME = new QName("", "Company");
    private final static QName _BalanceSheetTypeSnapshotCashAndBankBalances_QNAME = new QName("", "CashAndBankBalances");
    private final static QName _BalanceSheetTypeSnapshotOtherLongTermLiabilities_QNAME = new QName("", "OtherLongTermLiabilities");
    private final static QName _BalanceSheetTypeSnapshotAssets_QNAME = new QName("", "Assets");
    private final static QName _BalanceSheetTypeSnapshotTangibleAssetsCapitalWorkInProgress_QNAME = new QName("", "TangibleAssetsCapitalWorkInProgress");
    private final static QName _BalanceSheetTypeSnapshotMoneyReceivedAgainstShareWarrants_QNAME = new QName("", "MoneyReceivedAgainstShareWarrants");
    private final static QName _BalanceSheetTypeSnapshotNoncurrentLiabilities_QNAME = new QName("", "NoncurrentLiabilities");
    private final static QName _BalanceSheetTypeSnapshotOtherCurrentAssets_QNAME = new QName("", "OtherCurrentAssets");
    private final static QName _BalanceSheetTypeSnapshotLongTermLoansAndAdvances_QNAME = new QName("", "LongTermLoansAndAdvances");
    private final static QName _BalanceSheetTypeSnapshotShortTermBorrowings_QNAME = new QName("", "ShortTermBorrowings");
    private final static QName _BalanceSheetTypeSnapshotTangibleAssets_QNAME = new QName("", "TangibleAssets");
    private final static QName _BalanceSheetTypeSnapshotBalanceSheetAsOf_QNAME = new QName("", "BalanceSheetAsOf");
    private final static QName _BalanceSheetTypeSnapshotNoncurrentInvestments_QNAME = new QName("", "NoncurrentInvestments");
    private final static QName _BalanceSheetTypeSnapshotShareholdersFunds_QNAME = new QName("", "ShareholdersFunds");
    private final static QName _BalanceSheetTypeSnapshotDeferredTaxLiabilitiesNet_QNAME = new QName("", "DeferredTaxLiabilitiesNet");
    private final static QName _BalanceSheetTypeSnapshotTradeReceivables_QNAME = new QName("", "TradeReceivables");
    private final static QName _BalanceSheetTypeSnapshotNoncurrentAssets_QNAME = new QName("", "NoncurrentAssets");
    private final static QName _BalanceSheetTypeSnapshotOtherNoncurrentAssets_QNAME = new QName("", "OtherNoncurrentAssets");
    private final static QName _BalanceSheetTypeSnapshotFixedAssets_QNAME = new QName("", "FixedAssets");
    private final static QName _BalanceSheetTypeSnapshotLongTermBorrowings_QNAME = new QName("", "LongTermBorrowings");
    private final static QName _BalanceSheetTypeSnapshotForeignCurrencyMonetaryItemTranslationDifferenceLiabilityAccount_QNAME = new QName("", "ForeignCurrencyMonetaryItemTranslationDifferenceLiabilityAccount");
    private final static QName _BalanceSheetTypeSnapshotTradePayables_QNAME = new QName("", "TradePayables");
    private final static QName _BalanceSheetTypeSnapshotCurrentInvestments_QNAME = new QName("", "CurrentInvestments");
    private final static QName _BalanceSheetTypeSnapshotOtherCurrentLiabilities_QNAME = new QName("", "OtherCurrentLiabilities");
    private final static QName _BalanceSheetTypeSnapshotShortTermProvisions_QNAME = new QName("", "ShortTermProvisions");
    private final static QName _BalanceSheetTypeSnapshotEquityAndLiabilities_QNAME = new QName("", "EquityAndLiabilities");
    private final static QName _BalanceSheetTypeSnapshotInventories_QNAME = new QName("", "Inventories");
    private final static QName _BalanceSheetTypeSnapshotCurrentAssets_QNAME = new QName("", "CurrentAssets");
    private final static QName _BalanceSheetTypeSnapshotIntangibleAssets_QNAME = new QName("", "IntangibleAssets");
    private final static QName _BalanceSheetTypeSnapshotShortTermLoansAndAdvances_QNAME = new QName("", "ShortTermLoansAndAdvances");
    private final static QName _BalanceSheetTypeSnapshotDeferredTaxAssetsNet_QNAME = new QName("", "DeferredTaxAssetsNet");
    private final static QName _BalanceSheetTypeSnapshotShareApplicationMoneyPendingAllotment_QNAME = new QName("", "ShareApplicationMoneyPendingAllotment");
    private final static QName _BalanceSheetTypeSnapshotReservesAndSurplus_QNAME = new QName("", "ReservesAndSurplus");
    private final static QName _BalanceSheetTypeSnapshotProducingProperties_QNAME = new QName("", "ProducingProperties");
    private final static QName _BalanceSheetTypeSnapshotMinorityInterest_QNAME = new QName("", "MinorityInterest");
    private final static QName _BalanceSheetTypeSnapshotPreproducingProperties_QNAME = new QName("", "PreproducingProperties");
    private final static QName _BalanceSheetTypeSnapshotForeignCurrencyMonetaryItemTranslationDifferenceAssetAccount_QNAME = new QName("", "ForeignCurrencyMonetaryItemTranslationDifferenceAssetAccount");
    private final static QName _BalanceSheetTypeSnapshotCurrentLiabilities_QNAME = new QName("", "CurrentLiabilities");
    private final static QName _BalanceSheetTypeSnapshotIntangibleAssetsUnderDevelopmentOrWorkInProgress_QNAME = new QName("", "IntangibleAssetsUnderDevelopmentOrWorkInProgress");
    private final static QName _BalanceSheetTypeSnapshotLongTermProvisions_QNAME = new QName("", "LongTermProvisions");
    private final static QName _BalanceSheetTypeSnapshotDeferredGovernmentGrants_QNAME = new QName("", "DeferredGovernmentGrants");
    private final static QName _BalanceSheetTypeSnapshotShareCapital_QNAME = new QName("", "ShareCapital");
    private final static QName _BalanceSheetTypeSnapshotFinacialRatios_QNAME = new QName("", "FinacialRatios");
    private final static QName _BalanceSheetTypeSnapshotCompanyStructure_QNAME = new QName("", "CompanyStructure");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.example.xsd
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link BalanceSheetType }
     * 
     */
    public BalanceSheetType createBalanceSheetType() {
        return new BalanceSheetType();
    }

    /**
     * Create an instance of {@link CompanyReportType }
     * 
     */
    public CompanyReportType createCompanyReportType() {
        return new CompanyReportType();
    }

    /**
     * Create an instance of {@link LawsuitsType }
     * 
     */
    public LawsuitsType createLawsuitsType() {
        return new LawsuitsType();
    }

    /**
     * Create an instance of {@link IntangibleAssetsType }
     * 
     */
    public IntangibleAssetsType createIntangibleAssetsType() {
        return new IntangibleAssetsType();
    }

    /**
     * Create an instance of {@link VentureCapitalType }
     * 
     */
    public VentureCapitalType createVentureCapitalType() {
        return new VentureCapitalType();
    }

    /**
     * Create an instance of {@link IndividualNRIType }
     * 
     */
    public IndividualNRIType createIndividualNRIType() {
        return new IndividualNRIType();
    }

    /**
     * Create an instance of {@link CompanyType }
     * 
     */
    public CompanyType createCompanyType() {
        return new CompanyType();
    }

//-- Custom classes made by Rohit as additional tags being added later on --//    
    public ShareHolders createShareHolders() {
        return new ShareHolders();
    }
    public CompanyStructure createCompanyStructure() {
        return new CompanyStructure();
    }
    
/*    public SolvencyRatios createSolvencyRatios() {
        return new SolvencyRatios();
    }
    public LeverageRatios createLeverageRatios() {
        return new LeverageRatios();
    }
    public EffeciencyRatios createEffeciencyRatios() {
        return new EffeciencyRatios();
    }
    public ProfitabilityRatios createProfitabilityRatios() {
        return new ProfitabilityRatios();
    }*/

//------------------------//    
    /**
     * Create an instance of {@link MutualFundsType }
     * 
     */
    public MutualFundsType createMutualFundsType() {
        return new MutualFundsType();
    }

    /**
     * Create an instance of {@link AllotmentOfNewEquityType }
     * 
     */
    public AllotmentOfNewEquityType createAllotmentOfNewEquityType() {
        return new AllotmentOfNewEquityType();
    }

    /**
     * Create an instance of {@link AllotmentType }
     * 
     */
    public AllotmentType createAllotmentType() {
        return new AllotmentType();
    }

    /**
     * Create an instance of {@link StockExchangeDetailsType }
     * 
     */
    public StockExchangeDetailsType createStockExchangeDetailsType() {
        return new StockExchangeDetailsType();
    }

    /**
     * Create an instance of {@link PreviousCINType }
     * 
     */
    public PreviousCINType createPreviousCINType() {
        return new PreviousCINType();
    }

    /**
     * Create an instance of {@link KeyManagerialPersonsType }
     * 
     */
    public KeyManagerialPersonsType createKeyManagerialPersonsType() {
        return new KeyManagerialPersonsType();
    }

    /**
     * Create an instance of {@link CashFlowInDirectType }
     * 
     */
    public CashFlowInDirectType createCashFlowInDirectType() {
        return new CashFlowInDirectType();
    }

    /**
     * Create an instance of {@link PreviousNamesType }
     * 
     */
    public PreviousNamesType createPreviousNamesType() {
        return new PreviousNamesType();
    }

    /**
     * Create an instance of {@link CashFlowDirectType }
     * 
     */
    public CashFlowDirectType createCashFlowDirectType() {
        return new CashFlowDirectType();
    }

    /**
     * Create an instance of {@link AuditorsType }
     * 
     */
    public AuditorsType createAuditorsType() {
        return new AuditorsType();
    }

    /**
     * Create an instance of {@link ProductOrServiceType }
     * 
     */
    public ProductOrServiceType createProductOrServiceType() {
        return new ProductOrServiceType();
    }

    /**
     * Create an instance of {@link ShareCapitalType }
     * 
     */
    public ShareCapitalType createShareCapitalType() {
        return new ShareCapitalType();
    }

    /**
     * Create an instance of {@link ChargesType }
     * 
     */
    public ChargesType createChargesType() {
        return new ChargesType();
    }

    /**
     * Create an instance of {@link NonPromotersType }
     * 
     */
    public NonPromotersType createNonPromotersType() {
        return new NonPromotersType();
    }

    /**
     * Create an instance of {@link CompanyProfileType }
     * 
     */
    public CompanyProfileType createCompanyProfileType() {
        return new CompanyProfileType();
    }

    /**
     * Create an instance of {@link BodyCorporateType }
     * 
     */
    public BodyCorporateType createBodyCorporateType() {
        return new BodyCorporateType();
    }

    /**
     * Create an instance of {@link AuditorType }
     * 
     */
    public AuditorType createAuditorType() {
        return new AuditorType();
    }

    /**
     * Create an instance of {@link ForeignInstitutionalInvestorsType }
     * 
     */
    public ForeignInstitutionalInvestorsType createForeignInstitutionalInvestorsType() {
        return new ForeignInstitutionalInvestorsType();
    }

    /**
     * Create an instance of {@link IndividualForeignNationalType }
     * 
     */
    public IndividualForeignNationalType createIndividualForeignNationalType() {
        return new IndividualForeignNationalType();
    }

    /**
     * Create an instance of {@link StateGovernmentType }
     * 
     */
    public StateGovernmentType createStateGovernmentType() {
        return new StateGovernmentType();
    }

    /**
     * Create an instance of {@link EmploymentDetailsType }
     * 
     */
    public EmploymentDetailsType createEmploymentDetailsType() {
        return new EmploymentDetailsType();
    }

    /**
     * Create an instance of {@link SnapshotType }
     * 
     */
    public SnapshotType createSnapshotType() {
        return new SnapshotType();
    }

    /**
     * Create an instance of {@link ChargeType }
     * 
     */
    public ChargeType createChargeType() {
        return new ChargeType();
    }

    /**
     * Create an instance of {@link StockExchangeType }
     * 
     */
    public StockExchangeType createStockExchangeType() {
        return new StockExchangeType();
    }

    /**
     * Create an instance of {@link CentralGovernmentType }
     * 
     */
    public CentralGovernmentType createCentralGovernmentType() {
        return new CentralGovernmentType();
    }

    /**
     * Create an instance of {@link InsuranceCompaniesType }
     * 
     */
    public InsuranceCompaniesType createInsuranceCompaniesType() {
        return new InsuranceCompaniesType();
    }

    /**
     * Create an instance of {@link LawsuitType }
     * 
     */
    public LawsuitType createLawsuitType() {
        return new LawsuitType();
    }

    /**
     * Create an instance of {@link PromotersType }
     * 
     */
    public PromotersType createPromotersType() {
        return new PromotersType();
    }

    /**
     * Create an instance of {@link OthersType }
     * 
     */
    public OthersType createOthersType() {
        return new OthersType();
    }

    /**
     * Create an instance of {@link IndividualIndianType }
     * 
     */
    public IndividualIndianType createIndividualIndianType() {
        return new IndividualIndianType();
    }

    /**
     * Create an instance of {@link FinancialInstitutionsType }
     * 
     */
    public FinancialInstitutionsType createFinancialInstitutionsType() {
        return new FinancialInstitutionsType();
    }

    /**
     * Create an instance of {@link CompaniesAssociatedWithType }
     * 
     */
/*    public CompaniesAssociatedWithType createCompaniesAssociatedWithType() {
        return new CompaniesAssociatedWithType();
    }*/

    /**
     * Create an instance of {@link BanksType }
     * 
     */
    public BanksType createBanksType() {
        return new BanksType();
    }

    /**
     * Create an instance of {@link ShareHoldingPatternType }
     * 
     */
    public ShareHoldingPatternType createShareHoldingPatternType() {
        return new ShareHoldingPatternType();
    }

    /**
     * Create an instance of {@link GovernmentCompaniesType }
     * 
     */
    public GovernmentCompaniesType createGovernmentCompaniesType() {
        return new GovernmentCompaniesType();
    }

    /**
     * Create an instance of {@link PrincipalProductOrServicesType }
     * 
     */
    public PrincipalProductOrServicesType createPrincipalProductOrServicesType() {
        return new PrincipalProductOrServicesType();
    }

    /**
     * Create an instance of {@link ProfitAndLossType }
     * 
     */
    public ProfitAndLossType createProfitAndLossType() {
        return new ProfitAndLossType();
    }

    /**
     * Create an instance of {@link ComputerEquipmentsMemberType }
     * 
     */
    public ComputerEquipmentsMemberType createComputerEquipmentsMemberType() {
        return new ComputerEquipmentsMemberType();
    }

    /**
     * Create an instance of {@link KeyManagerialPersonType }
     * 
     */
    public KeyManagerialPersonType createKeyManagerialPersonType() {
        return new KeyManagerialPersonType();
    }

    /**
     * Create an instance of {@link BalanceSheetType.Snapshot }
     * 
     */
    public BalanceSheetType createBalanceSheetTypeSnapshot() {
        return new BalanceSheetType();
    }
    
    public List<FinancialRatios> createFinancialRatios() {
        return new ArrayList<FinancialRatios>();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompanyReportType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CompanyReport")
    public JAXBElement<CompanyReportType> createCompanyReport(CompanyReportType value) {
        return new JAXBElement<CompanyReportType>(_CompanyReport_QNAME, CompanyReportType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompanyType }{@code >}}
     * 
     */
/*    @XmlElementDecl(namespace = "", name = "Company", scope = CompaniesAssociatedWithType.class)
    public JAXBElement<CompanyType> createCompaniesAssociatedWithTypeCompany(CompanyType value) {
        return new JAXBElement<CompanyType>(_CompaniesAssociatedWithTypeCompany_QNAME, CompanyType.class, CompaniesAssociatedWithType.class, value);
    }*/

}
